#+TITLE: org-roam-more - Enhanced Org-Roam Functionality
#+AUTHOR: gongshangzheng
#+DATE: 2025-05-07
#+LANGUAGE: en

* Overview

=org-roam-more= provides enhanced functionality for [[https://www.orgroam.com/][org-roam]], including:

- 📝 *Transclusion Management* - Embed and sync content from other nodes
- 📦 *Node Content Operations* - Powerful read/write operations for node content
- 🔗 *Enhanced Node Creation* - Smart node insertion with automatic linking
- 📅 *Daily Journal Integration* - Automatic logging to daily notes
- 🛠️  *Utility Functions* - Rich set of helper functions for org-roam

* Features

** 🔄 Transclusion System

Insert content from one node into another location while maintaining bidirectional sync.

- Insert transclusions preserving original heading levels
- Push/pull synchronization (bidirectional)
- Content equality checking
- Visual diff with ediff integration
- Tag-based transclusion tracking
- Quick navigation to original nodes
- Smart detection works even when cursor is in subheadings

** 📦 Node Content Management

- Get and set node content with options to preserve/remove properties
- Path-based content operations (using outline paths)
- Create subnodes under existing nodes
- Set node properties programmatically

** 🔗 Smart Node Creation

- Create or select nodes with automatic link insertion
- Support for both regular links and transclusions
- Hook-based capture workflow
- Filter and template customization

** 📅 Daily Integration

- Automatic insertion of new nodes into daily journal
- Configurable hook system
- Manual insertion of current node

* Installation

** Using straight.el

#+BEGIN_SRC elisp
(straight-use-package
 '(org-roam-more :type git :host github :repo "gongshangzheng/org-roam-more"))
#+END_SRC

** Using use-package

#+BEGIN_SRC elisp
(use-package org-roam-more
  :after org-roam
  :load-path "/path/to/org-roam-more/"
  :config
  (require 'org-roam-more))
#+END_SRC

* Quick Start

** Basic Transclusion Workflow

#+BEGIN_SRC elisp
;; 1. Insert a transclusion
M-x org-roam-more-insert-transclude

;; 2. Edit the transcluded content...

;; 3. Push changes back to original node
M-x org-roam-more-transclusion-push

;; OR pull updates from original node
M-x org-roam-more-transclusion-pull
#+END_SRC

** Enable Daily Integration

#+BEGIN_SRC elisp
;; Enable automatic daily journal insertion
(org-roam-more-toggle-insert-link-hook t)

;; Disable it
(org-roam-more-toggle-insert-link-hook nil)
#+END_SRC

* Module Structure

The package is organized into focused modules:

- =org-roam-more-utils.el= - Utility functions (links, paths, headings)
- =org-roam-more-node.el= - Node content operations
- =org-roam-more-transclusion.el= - Transclusion management
- =org-roam-more-capture.el= - Node creation and insertion
- =org-roam-more-daily.el= - Daily journal integration
- =org-roam-more.el= - Main entry point (loads all modules)

* Key Functions

** Transclusion

| Function | Description |
|----------|-------------|
| =org-roam-more-insert-transclude= | Insert transclusion at point |
| =org-roam-more-is-transclusion-p= | Check if current entry is a transclusion (works in subheadings) |
| =org-roam-more-transclusion-content-equal-p= | Check content equality (works in subheadings) |
| =org-roam-more-transclusion-push= | Smart push (current or all) |
| =org-roam-more-transclusion-pull= | Smart pull (current or all) |
| =org-roam-more-transclusion-push-current= | Push current transclusion (works in subheadings) |
| =org-roam-more-transclusion-push-all= | Push all transclusions in file |
| =org-roam-more-transclusion-pull-current= | Pull to current transclusion (works in subheadings) |
| =org-roam-more-transclusion-pull-all= | Pull to all transclusions in file |
| =org-roam-more-compare-transclusion-and-roam-content= | Compare with ediff (works in subheadings) |
| =org-roam-more-transclusion-goto-original= | Jump to original node from transclusion |

** Node Operations

| Function | Description |
|----------|-------------|
| =org-roam-more-get-node-content= | Get node content |
| =org-roam-more-set-node-content= | Set node content (preserves heading/properties) |
| =org-roam-more-get-node-body= | Get node body interactively |
| =org-roam-more-get-content-at-path= | Get content by outline path |
| =org-roam-more-set-content-at-path= | Set content by outline path |
| =org-roam-more-capture-under-node= | Create subnode under existing node |
| =org-roam-more-set-source-property-from-node= | Set SOURCE property |

** Node Creation

| Function | Description |
|----------|-------------|
| =org-roam-more-insert-new-node-with-id= | Create/select node and insert link |

** Daily Integration

| Function | Description |
|----------|-------------|
| =org-roam-more-toggle-insert-link-hook= | Enable/disable auto-insertion hook |
| =org-roam-more-insert-current-node-link-into-daily= | Insert current node to daily |

** Utilities

| Function | Description |
|----------|-------------|
| =org-roam-more-node-link= | Generate node link |
| =org-roam-more-format-link= | Format node link |
| =org-roam-more-insert-subheading= | Insert subheading |
| =org-roam-more-insert-heading-with-level= | Insert heading at level |
| =org-roam-more-get-current-node-id-title= | Get current node ID and title |
| =org-roam-more-get-current-path= | Get current outline path |
| =org-roam-more-heading-to-olp= | Convert heading to outline path |
| =org-roam-more-subheadings-under-olp= | Get subheadings under path |

* Usage Examples

** Transclusion Management

#+BEGIN_SRC elisp
;; Insert a transclusion
(org-roam-more-insert-transclude)

;; Check if current entry is a transclusion
(org-roam-more-is-transclusion-p) ;; => t or nil

;; Check if content matches original
(org-roam-more-transclusion-content-equal-p) ;; => t or nil

;; Smart push - automatically detects context
;; - If cursor in transclusion entry: push current entry
;; - Otherwise: push all transclusions in file
(org-roam-more-transclusion-push)

;; Smart pull - automatically detects context
;; - If cursor in transclusion entry: pull to current entry
;; - Otherwise: pull to all transclusions in file
(org-roam-more-transclusion-pull)

;; Manual control
(org-roam-more-transclusion-push-current) ;; Push current entry
(org-roam-more-transclusion-push-all)     ;; Push all entries
(org-roam-more-transclusion-pull-current) ;; Pull to current
(org-roam-more-transclusion-pull-all)     ;; Pull to all

;; Compare with ediff and update both sides
(org-roam-more-compare-transclusion-and-roam-content)

;; Jump to original node from transclusion
;; Works even when cursor is in a subheading of the transclusion
(org-roam-more-transclusion-goto-original)
#+END_SRC

** Node Content Manipulation

#+BEGIN_SRC elisp
;; Get node content
(let* ((node (org-roam-node-read))
       (content (org-roam-more-get-node-content node t))) ;; t = remove properties
  (message "Content: %s" content))

;; Set node content (preserves heading and properties)
(let ((node (org-roam-node-read))
      (new-content "This is the new content."))
  (org-roam-more-set-node-content node new-content))

;; Get content by path
(let ((path '("Top Level" "Second Level" "Target Heading")))
  (org-roam-more-get-content-at-path path t)) ;; => content string

;; Set content by path
(let ((path '("Top Level" "Second Level" "Target Heading"))
      (new-content "Updated content."))
  (org-roam-more-set-content-at-path path new-content))
#+END_SRC

** Creating Nodes

#+BEGIN_SRC elisp
;; Create subnode under existing node
(org-roam-more-capture-under-node)

;; Insert new node with automatic link creation
(org-roam-more-insert-new-node-with-id)

;; Insert new node as transclusion
(org-roam-more-insert-new-node-with-id nil nil t)
#+END_SRC

** Daily Journal Integration

#+BEGIN_SRC elisp
;; Enable automatic insertion to daily journal
(org-roam-more-toggle-insert-link-hook t)

;; Manually insert current node to daily
(org-roam-more-insert-current-node-link-into-daily)

;; Disable automatic insertion
(org-roam-more-toggle-insert-link-hook nil)
#+END_SRC

* Configuration

** Custom Transclusion Behavior

#+BEGIN_SRC elisp
;; Insert full content instead of #+transclude link (not recommended)
(setq org-roam-more-transclusion-insert-content nil)
#+END_SRC

** Keybindings Example

#+BEGIN_SRC elisp
(with-eval-after-load 'org-roam-more
  (define-key org-mode-map (kbd "C-c n t i") #'org-roam-more-insert-transclude)
  (define-key org-mode-map (kbd "C-c n t p") #'org-roam-more-transclusion-push)
  (define-key org-mode-map (kbd "C-c n t u") #'org-roam-more-transclusion-pull)
  (define-key org-mode-map (kbd "C-c n t c") #'org-roam-more-compare-transclusion-and-roam-content)
  (define-key org-mode-map (kbd "C-c n t g") #'org-roam-more-transclusion-goto-original)
  (define-key org-mode-map (kbd "C-c n c") #'org-roam-more-capture-under-node))
#+END_SRC

* How Transclusion Works

1. *Insert*: When you insert a transclusion, the entire content of the source node (including its heading structure) is copied to the current location.

2. *Marking*: The transcluded content is marked with:
   - =:transclusion:= tag on the top-level heading
   - Properties: =ORIGINAL-ID=, =ORIGINAL-HEADING=, =ORIGINAL-NODE-LINK=

3. *Sync*:
   - *Push*: Copy content from transclusion → original node
   - *Pull*: Copy content from original node → transclusion
   - Content comparison ignores leading/trailing whitespace

4. *Smart Detection*: Push/pull commands automatically detect whether you're inside a transclusion entry or not, and act accordingly. Even if your cursor is in a subheading within the transclusion, the system correctly identifies the top-level transclusion.

5. *Navigation*: Use =org-roam-more-transclusion-goto-original= to quickly jump from any transclusion (or its subheadings) back to the original node.

* Workflow Recommendations

** Scenario 1: Working with Transclusions

1. Insert transclusion: =M-x org-roam-more-insert-transclude=
2. Edit the content in place
3. Push changes: =M-x org-roam-more-transclusion-push=
4. Later, if original changes: =M-x org-roam-more-transclusion-pull=

** Scenario 2: Creating Related Notes

1. Create parent note normally
2. Use =M-x org-roam-more-capture-under-node= to create child notes
3. Optionally transclude children into parent for overview

** Scenario 3: Daily Journaling

1. Enable hook: =(org-roam-more-toggle-insert-link-hook t)=
2. Create notes normally
3. Links automatically appear in your daily journal

* Troubleshooting

** Transclusion not detected

- Make sure the heading has the =:transclusion:= tag
- Check that =ORIGINAL-ID= property exists

** Content not syncing

- Use =org-roam-more-transclusion-content-equal-p= to check equality
- Try =org-roam-more-compare-transclusion-and-roam-content= to see differences

** Daily insertion not working

- Verify hook is enabled: =org-roam-more-insert-link-hook-enabled= should be =t=
- Check that =~/org/roam/daily/journal.org= exists (or customize the path)

* Contributing

Contributions are welcome! Please:

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Submit a pull request

* License

GPL-3.0-or-later

* Acknowledgments

- [[https://www.orgroam.com/][org-roam]] - The foundation this package builds upon
- The Emacs and Org-mode communities
